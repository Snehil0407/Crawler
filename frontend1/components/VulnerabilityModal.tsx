import React from 'react';
import { X } from 'lucide-react';
import { Vulnerability } from '../types';
import { getSeverity, formatVulnerabilityTitle, cn } from '../lib/utils';

interface VulnerabilityModalProps {
  vulnerability: Vulnerability | null;
  isOpen: boolean;
  onClose: () => void;
}

export const VulnerabilityModal: React.FC<VulnerabilityModalProps> = ({ 
  vulnerability, 
  isOpen, 
  onClose 
}) => {
  if (!isOpen || !vulnerability) return null;

  const severity = getSeverity(vulnerability);
  
  const severityConfig = {
    critical: { 
      color: 'text-critical', 
      bg: 'bg-red-100 dark:bg-red-900/30', 
      border: 'border-red-200 dark:border-red-800' 
    },
    high: { 
      color: 'text-high', 
      bg: 'bg-orange-100 dark:bg-orange-900/30', 
      border: 'border-orange-200 dark:border-orange-800' 
    },
    medium: { 
      color: 'text-medium', 
      bg: 'bg-yellow-100 dark:bg-yellow-900/30', 
      border: 'border-yellow-200 dark:border-yellow-800' 
    },
    low: { 
      color: 'text-low', 
      bg: 'bg-green-100 dark:bg-green-900/30', 
      border: 'border-green-200 dark:border-green-800' 
    },
  };

  const config = severityConfig[severity];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 dark:bg-black dark:bg-opacity-70 flex items-center justify-center p-4 z-50">
      <div className="bg-white dark:bg-gray-800 rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100">
            {formatVulnerabilityTitle(vulnerability.type)}
          </h3>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
          >
            <X className="h-5 w-5 text-gray-500 dark:text-gray-400" />
          </button>
        </div>

        {/* Content */}
        <div className="p-6 space-y-6">
          {/* Severity Badge */}
          <div className="flex items-center gap-2">
            <span className={cn(
              "px-3 py-1 rounded-full text-sm font-medium uppercase",
              config.bg,
              config.color,
              config.border,
              "border"
            )}>
              {severity}
            </span>
          </div>

          {/* Description */}
          <div>
            <h4 className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
              <div className="w-1 h-4 bg-primary-600 dark:bg-primary-400 rounded"></div>
              Description
            </h4>
            <p className="text-gray-600 dark:text-gray-400 leading-relaxed">
              {vulnerability.details?.description || 'No description available'}
            </p>
          </div>

          {/* Affected URL */}
          <div>
            <h4 className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
              <div className="w-1 h-4 bg-primary-600 dark:bg-primary-400 rounded"></div>
              Affected URL
            </h4>
            <p className="text-gray-600 dark:text-gray-400 font-mono text-sm bg-gray-50 dark:bg-gray-700 p-3 rounded-lg break-all">
              {vulnerability.url}
            </p>
          </div>

          {/* Payload (if available) */}
          {vulnerability.details?.payload && (
            <div>
              <h4 className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
                <div className="w-1 h-4 bg-primary-600 dark:bg-primary-400 rounded"></div>
                Payload
              </h4>
              <p className="text-gray-600 dark:text-gray-400 font-mono text-sm bg-gray-50 dark:bg-gray-700 p-3 rounded-lg break-all">
                {vulnerability.details.payload}
              </p>
            </div>
          )}

          {/* Recommendation */}
          <div>
            <h4 className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
              <div className="w-1 h-4 bg-primary-600 dark:bg-primary-400 rounded"></div>
              Recommendation
            </h4>
            <p className="text-gray-600 dark:text-gray-400 leading-relaxed">
              {vulnerability.details?.recommendation || 'No recommendation available'}
            </p>
          </div>

          {/* Potential Impact (if available) */}
          {vulnerability.details?.consequences && (
            <div>
              <h4 className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
                <div className="w-1 h-4 bg-red-500 dark:bg-red-400 rounded"></div>
                Potential Impact
              </h4>
              <p className="text-gray-600 dark:text-gray-400 leading-relaxed">
                {vulnerability.details.consequences}
              </p>
            </div>
          )}
        </div>

        {/* Footer */}
        <div className="px-6 py-4 bg-gray-50 dark:bg-gray-700 rounded-b-xl">
          <button
            onClick={onClose}
            className="w-full bg-primary-600 dark:bg-primary-700 hover:bg-primary-700 dark:hover:bg-primary-600 text-white font-medium py-2 px-4 rounded-lg transition-colors"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  );
};
